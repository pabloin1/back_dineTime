// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(uuid())
  nombre    String
  apellido  String
  correo    String   @unique
  password  String
  createdAt DateTime @default(now())
  estado    Boolean  @default(true)
  mesas     Mesas[]
}

model Mesero {
  id       String   @id @default(uuid())
  nombre   String
  apellido String
  email    String   @unique
  password String
  position String
  urlImg   String
  estado   Boolean  @default(true)
  phone    String
  cuentas  Cuenta[]
}

model Producto {
  id          String     @id @default(uuid())
  urlimg      String
  nombre      String
  precio      Float
  tipo        String
  estado      Boolean    @default(true)
  puntaje     Int        @default(0)
  categoria   Categorias @relation(fields: [categoriaId], references: [id])
  categoriaId String
  createdAt   DateTime   @default(now())
  ventas      Ventas[]
}

model Categorias {
  id        String     @id @default(uuid())
  nombre    String     @unique
  createdAt DateTime   @default(now())
  estado    Boolean    @default(true)
  productos Producto[]
}

model Reservaciones {
  id             String   @id @default(uuid())
  nombre         String
  apellido       String
  email          String
  phone          String
  amountOfPeople Int
  dia            String
  hora           String
  estado         Boolean  @default(true)
  createdAt      DateTime @default(now())
}

model Ventas {
  id          String   @id @default(uuid())
  id_producto String
  cantidad    Int
  precio_Fn   Float
  id_mesa     String
  estado      Boolean  @default(true)
  createdAt   DateTime @default(now())
  mesa        Mesas    @relation(fields: [id_mesa], references: [id])
  producto    Producto @relation(fields: [id_producto], references: [id])
}

model Mesas {
  id         String   @id @default(uuid())
  num_mesa   Int
  num_sillas Int
  id_admin   String
  estado     Boolean  @default(true)
  createdAt  DateTime @default(now())
  admin      Admin    @relation(fields: [id_admin], references: [id])
  ventas     Ventas[]
}

model ApiKey {
  id        String   @id @default(uuid())
  key       String   @unique @default(cuid())
  createdAt DateTime @default(now())
}

model Cuenta {
  id        String   @id @default(uuid())
  id_mesero String
  total     Float
  pagado    Boolean
  estado    Boolean  @default(true)
  createdAt DateTime @default(now())
  mesero    Mesero   @relation(fields: [id_mesero], references: [id])
}
